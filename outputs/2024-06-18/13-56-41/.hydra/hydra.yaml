hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: Mighty-DACs
    header: '== ${hydra.help.app_name} ==

      The Mighty cRL library you''ve been looking for!'
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help'
    template: "${hydra.help.header}\n\n== Configuration groups ==\nCompose your configuration\
      \ from those algorithms (algorithm=dqn)\n\n$APP_CONFIG_GROUPS\n\n== Common Hyperparameters\
      \ ==\n* debug:              flag to toggle debug output (default: false)\n*\
      \ seed:               Which seed to use (default: 0)\n* output_dir:        \
      \ Where to store result data (default: /tmp)\n                      hydra specific\
      \ information will be in \"output_dir/year-month-day/timestamp/.hydra\"\n\n\
      * wandb_project:      For wandb integration (default: null)\n* tensorboard_file:\
      \   For tensorboard integration (default: null)\n* experiment_name:    The folder\
      \ in which the specific experiment data is to be stored.\n                 \
      \     I.e. the path will be \"output_dir/experiment_name\"\n\n* algorithm_kwargs:\
      \   A dictionary to specify hyperparameter settings to the algorithms.\n   \
      \                   Will be overwritten/populated with the choice of algorithm.\n\
      * num_steps:          Maximum number of steps in the environment before episode\
      \ ends. (default: 1000000)\n* env:                The environment string name\
      \ to use, e.g., MountainCarContinuous (default: CartPole-v1)\n             \
      \         For gym environments please see https://www.gymlibrary.ml/ (simple\
      \ control environments are by\n                      default supported)\n  \
      \                    For DACBench environments please see https://github.com/automl/DACBench\n\
      \                      For CARL environments please see https://github.com/automl/CARL\n\
      * env_kwargs:         Dict to modify environment parameters. Note: Currently\
      \ only supported for CARL envs\n* env_warppers:       List of wrapper classes\
      \ to apply to the environment. (default: [])\n\n* eval_every_n_steps: Training\
      \ steps interval after which the agent is evaluated on a separate eval_env,\
      \ i.e., a \n                      second copy of the training env (default:\
      \ 1000)\n* n_episodes_eval:    Training episodes interval after which the agent\
      \ is evlauted on a separate eval_env, i.e., a \n                      second\
      \ copy of the training environment (default: null)\n* checkpoint:         Path\
      \ to load a checkpointed model from. This allows to contnue training. If unset\
      \ a new model is\n                      trained from scratch (default: null)\n\
      \n== Config ==\nAny key=value argument can be overridden (use dots for.nested=overrides),\
      \ for example:\npython mighty/run_mighty.py 'algorithm=ppo' 'env=MountainCarContinuous'\
      \ 'num_steps=1000' 'algorithm_kwargs.learning_rate=0.1'\nor\npython mighty/run_mighty.py\
      \ 'algorithm=dqn' 'env=SigmoidBenchmark' 'num_steps=100000'\n\nThis is the configuration\
      \ that was generated for this run:\n-------\n$CONFIG\n-------\n\n${hydra.help.footer}"
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          DEBUG: purple
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - environment=pufferlib_ocean/bandit
  job:
    name: run_mighty
    chdir: null
    override_dirname: environment=pufferlib_ocean/bandit
    id: ???
    num: ???
    config_name: base
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/theeimer/Documents/git/Mighty-DACS
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/theeimer/Documents/git/Mighty-DACS/mighty/configs
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: ''
      schema: structured
      provider: schema
    output_dir: /Users/theeimer/Documents/git/Mighty-DACS/outputs/2024-06-18/13-56-41
    choices:
      search_space: dqn_gym_classic
      environment: pufferlib_ocean/bandit
      algorithm: dqn
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: colorlog
      hydra/hydra_logging: colorlog
      hydra/hydra_help: default
      hydra/help: mighty_help
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
